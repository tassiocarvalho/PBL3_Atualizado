% Ler o vetor de coeficientes (que estava no vetor.txt)
h = [-0.0000146194, -0.0000124977, -0.0000036797, 0.0000119771, 0.0000324866, 0.0000538474, 0.0000708616, 0.0000785440, 0.0000737851, 0.0000567862, 0.0000317630, 0.0000065444, -0.0000090258, -0.0000056296, 0.0000226382, 0.0000758399, 0.0001470342, 0.0002229538, 0.0002866444, 0.0003216275, 0.0003166346, 0.0002696380, 0.0001899088, 0.0000972005, 0.0000178484, -0.0000215850, -0.0000016902, 0.0000832990, 0.0002218501, 0.0003857275, 0.0005352677, 0.0006285152, 0.0006322228, 0.0005319437, 0.0003383320, 0.0000874485, -0.0001657696, -0.0003599489, -0.0004429825, -0.0003871431, -0.0001994574, 0.0000760072, 0.0003654957, 0.0005816897, 0.0006452774, 0.0005068167, 0.0001630953, -0.0003369630, -0.0008995320, -0.0014057311, -0.0017401469, -0.0018213841, -0.0016267836, -0.0012042015, -0.0006664519, -0.0001681618, 0.0001306072, 0.0001057082, -0.0002951236, -0.0010316096, -0.0019724099, -0.0029204280, -0.0036575395, -0.0039988736, -0.0038433954, -0.0032073099, -0.0022300851, -0.0011491090, -0.0002467920, 0.0002185973, 0.0000818847, -0.0006780981, -0.0019203293, -0.0033636105, -0.0046465062, -0.0054129762, -0.0054038335, -0.0045310245, -0.0029142480, -0.0008674194, 0.0011656749, 0.0027142288, 0.0033986233, 0.0030350472, 0.0016987271, -0.0002737189, -0.0023483479, -0.0039134755, -0.0044288933, -0.0035692488, -0.0013247552, 0.0019697548, 0.0056906355, 0.0090589518, 0.0113244206, 0.0119575897, 0.0108025861, 0.0081487669, 0.0046964826, 0.0014165492, -0.0006705425, -0.0007475586, 0.0015745220, 0.0061177959, 0.0121269652, 0.0184012435, 0.0235492194, 0.0263156654, 0.0259074088, 0.0222391762, 0.0160324526, 0.0087293291, 0.0022235024, -0.0015465534, -0.0010614245, 0.0043592125, 0.0142797695, 0.0270906252, 0.0402017640, 0.0504686492, 0.0547791255, 0.0506907968, 0.0369905109, 0.0140561884, -0.0160644406, -0.0498898945, -0.0830250635, -0.1108764358, -0.1294317613, 0.8639961091, -0.1294799147, -0.1109589583, -0.0831177835, -0.0499642099, -0.0160943653, 0.0140876241, 0.0370870778, 0.0508421243, 0.0549632192, 0.0506572355, 0.0403671342, 0.0272122928, 0.0143493070, 0.0043820945, -0.0010673999, -0.0015558500, 0.0022377193, 0.0087884956, 0.0161472956, 0.0224070774, 0.0261130584, 0.0265348082, 0.0237545367, 0.0185689064, 0.0122422453, 0.0061783775, 0.0015907409, -0.0007555583, -0.0006779880, 0.0014328511, 0.0047524412, 0.0082491940, 0.0109401660, 0.0121148318, 0.0114780566, 0.0091856533, 0.0057726302, 0.0019989742, -0.0013449742, -0.0036252647, -0.0045003265, -0.0039783109, -0.0023882911, -0.0002784966, 0.0017291409, 0.0030907621, 0.0034625668, 0.0027665486, 0.0011886878, -0.0008849523, -0.0029745378, -0.0046269377, -0.0055208445, -0.0055328402, -0.0047517021, -0.0034414491, -0.0019657429, -0.0006944825, 0.0000839058, 0.0002241078, -0.0002531449, -0.0011793101, -0.0022899178, -0.0032951422, -0.0039508114, -0.0041129199, -0.0037639723, -0.0030071311, -0.0020321476, -0.0010634807, -0.0003044237, 0.0001091058, 0.0001348885, -0.0001737837, -0.0006891740, -0.0012460708, -0.0016844657, -0.0018872448, -0.0018043166, -0.0014585968, -0.0009340329, -0.0003501442, 0.0001696025, 0.0005274430, 0.0006720666, 0.0006063266, 0.0003812901, 0.0000793588, -0.0002084333, -0.0004049254, -0.0004637536, -0.0003771813, -0.0001738741, 0.0000918154, 0.0003555929, 0.0005596763, 0.0006659139, 0.0006627607, 0.0005650966, 0.0004077198, 0.0002347959, 0.0000882759, -0.0000017937, -0.0000229388, 0.0000189962, 0.0001036130, 0.0002027691, 0.0002883932, 0.0003392726, 0.0003452816, 0.0003083482, 0.0002403497, 0.0001588682, 0.0000821434, 0.0000245838, -0.0000061305, -0.0000098587, 0.0000071717, 0.0000349322, 0.0000626967, 0.0000818167, 0.0000875114, 0.0000793759, 0.0000606835, 0.0000368648, 0.0000137002, -0.0000042487, -0.0000145924, -0.0000173040];

% Ler o áudio de um arquivo MP4
% Ler o áudio de um arquivo MP3
[audioIn, fs] = audioread('audio.mp3'); 

% Se for estéreo, converte para mono (média dos canais)
if size(audioIn,2) > 1
    audioIn = mean(audioIn, 2);
end

% Convoluir o áudio com o vetor de coeficientes
audioOut = conv(audioIn, h, 'same');  % Mantém o mesmo tamanho do original

% Normalizar a saída para evitar distorção por estouro (clipagem)
audioOut = audioOut / max(abs(audioOut));

% Salvar o resultado como arquivo WAV
audiowrite('audio_filtrado.wav', audioOut, fs);

%% Análise no domínio da frequência (FFT)

N = length(audioIn);  % Tamanho do sinal original
f = linspace(0, fs/2, floor(N/2)+1);  % Eixo de frequência até Nyquist

% FFT do áudio original
AudioIn_fft = fft(audioIn);
AudioIn_mag = abs(AudioIn_fft(1:floor(N/2)+1));

% FFT do áudio filtrado
AudioOut_fft = fft(audioOut);
AudioOut_mag = abs(AudioOut_fft(1:floor(N/2)+1));

% Plot do espectro
figure;
subplot(2,1,1);
plot(f, (AudioIn_mag + eps));  % eps evita log de zero
title('Espectro de Magnitude - Áudio Original');
xlabel('Frequência (Hz)');
ylabel('Magnitude (dB)');
grid on;

subplot(2,1,2);
plot(f, (AudioOut_mag + eps));  % eps evita log de zero
title('Espectro de Magnitude - Áudio Filtrado');
xlabel('Frequência (Hz)');
ylabel('Magnitude (dB)');
grid on;